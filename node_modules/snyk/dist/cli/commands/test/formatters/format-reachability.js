"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.summariseReachableVulns = exports.getReachabilityText = exports.formatReachability = void 0;
const wrap = require("wrap-ansi");
const chalk_1 = require("chalk");
const legacy_1 = require("../../../../lib/snyk-test/legacy");
const reachabilityLevels = {
    [legacy_1.REACHABILITY.FUNCTION]: {
        color: chalk_1.default.redBright,
        text: 'Likely reachable',
    },
    [legacy_1.REACHABILITY.PACKAGE]: {
        color: chalk_1.default.yellow,
        text: '',
    },
    [legacy_1.REACHABILITY.UNREACHABLE]: {
        color: chalk_1.default.blueBright,
        text: 'Likely unreachable',
    },
    [legacy_1.REACHABILITY.NO_INFO]: {
        color: (str) => str,
        text: '',
    },
};
function formatReachability(reachability) {
    if (!reachability) {
        return '';
    }
    const reachableInfo = reachabilityLevels[reachability];
    const textFunc = reachableInfo ? reachableInfo.color : (str) => str;
    const text = reachableInfo && reachableInfo.text ? `[${reachableInfo.text}]` : '';
    return wrap(textFunc(text), 100);
}
exports.formatReachability = formatReachability;
function getReachabilityText(reachability) {
    if (!reachability) {
        return '';
    }
    const reachableInfo = reachabilityLevels[reachability];
    return reachableInfo ? reachableInfo.text : '';
}
exports.getReachabilityText = getReachabilityText;
function summariseReachableVulns(vulnerabilities) {
    const reachableVulnsCount = vulnerabilities.filter((v) => v.reachability === legacy_1.REACHABILITY.FUNCTION).length;
    if (reachableVulnsCount > 0) {
        const vulnText = reachableVulnsCount === 1 ? 'vulnerability' : 'vulnerabilities';
        return `In addition, found ${reachableVulnsCount} ${vulnText} with a reachable path.`;
    }
    return '';
}
exports.summariseReachableVulns = summariseReachableVulns;
//# sourceMappingURL=format-reachability.js.map